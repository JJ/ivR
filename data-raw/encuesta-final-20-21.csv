Marca temporal,¿Qué conceptos o tecnologías consideras que has aprendido este año?,"¿Qué te gustaría haber aprendido, pero no se ha impartido este año?","Consideras que la asignatura, tal como está impartida y con los contenidos actuales, es útil para"
13/01/2021 8:25:11,"El lenguaje de programación elegido, Github Actions, Uso de sistemas serverless, Uso de PaaS (plataformas como servicio)","Creación de instancias de máquinas virtuales en la nube y orquestación, Terraform",El mundo real
13/01/2021 8:29:11,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Otros sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de PaaS (plataformas como servicio), Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST","Creación de instancias de máquinas virtuales en la nube y orquestación, Kubernetes, Docker Compose y otros sistemas de orquestación de contenedores",Los dos
13/01/2021 8:33:02,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de PaaS (plataformas como servicio), Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST, Desarrollo paso a paso de un diseño y despliegue real","Creación de instancias de máquinas virtuales en la nube y orquestación, Kubernetes, Tecnologías más avanzadas de microservicios: API gateways, service mesh",El mundo real
13/01/2021 8:36:06,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Buenas prácticas en uso de sistemas de integración continua, Uso de sistemas serverless, Programación de microservicios web, Uso de PaaS (plataformas como servicio)",Docker Compose y otros sistemas de orquestación de contenedores,El mundo real
13/01/2021 8:46:09,"El lenguaje de programación elegido, Uso de sistemas serverless","Creación de instancias de máquinas virtuales en la nube y orquestación, Terraform, Kubernetes, Tecnologías más avanzadas de microservicios: API gateways, service mesh",Los dos
13/01/2021 10:20:56,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Docker y contenedores, Diseño de APIs REST",,El mundo real
13/01/2021 10:43:12,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST",Docker Compose y otros sistemas de orquestación de contenedores,El mundo real
13/01/2021 11:23:08,"Git y GitHub, Desarrollo basado en test, Travis, Github Actions, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de PaaS (plataformas como servicio), Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST","Kubernetes, Docker Compose y otros sistemas de orquestación de contenedores",Los dos
13/01/2021 16:20:59,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de PaaS (plataformas como servicio), Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST","Creación de instancias de máquinas virtuales en la nube y orquestación, Terraform, Kubernetes",El mundo real
13/01/2021 16:21:06,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de PaaS (plataformas como servicio), Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST",Docker Compose y otros sistemas de orquestación de contenedores,Los dos
13/01/2021 16:22:10,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Uso de sistemas serverless, Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST","Terraform, Kubernetes, Docker Compose y otros sistemas de orquestación de contenedores",El mundo real
13/01/2021 16:22:45,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de PaaS (plataformas como servicio), Diseño de APIs REST","Terraform, Kubernetes",Los dos
13/01/2021 16:23:41,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de PaaS (plataformas como servicio), Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST","Terraform, Kubernetes, Tecnologías más avanzadas de microservicios: API gateways, service mesh",Los dos
13/01/2021 16:31:10,"Git y GitHub, Docker y contenedores","Kubernetes, Docker Compose y otros sistemas de orquestación de contenedores",Los dos
14/01/2021 19:24:15,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis",Docker Compose y otros sistemas de orquestación de contenedores,El mundo real
14/01/2021 19:27:08,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de PaaS (plataformas como servicio), Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST","Creación de instancias de máquinas virtuales en la nube y orquestación, Terraform, Kubernetes, Tecnologías más avanzadas de microservicios: API gateways, service mesh",Los dos
14/01/2021 19:36:17,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST","Terraform, Kubernetes",Los dos
15/01/2021 13:22:42,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST",Terraform,El mundo real
15/01/2021 13:29:05,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web",,El mundo real
16/01/2021 16:18:54,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST","Kubernetes, Docker Compose y otros sistemas de orquestación de contenedores",Los dos
18/01/2021 16:21:20,"Git y GitHub, Programación de microservicios web, Diseño de APIs REST",Las cosas especificas me las he tenido que buscar todo yo. Me gustaría haber aprendido un poco mejor aspectos generales de la asignatura.,El mundo real
19/01/2021 14:29:40,"Git y GitHub, Desarrollo basado en test, El lenguaje de programación elegido, Travis, Github Actions, Otros sistemas de integración continua, Buenas prácticas en uso de sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de PaaS (plataformas como servicio), Uso de herramientas de construcción/gestores de tareas/gestores de dependencias, Diseño de APIs REST",Creación de instancias de máquinas virtuales en la nube y orquestación,Los dos
21/01/2021 7:48:19,"El lenguaje de programación elegido, Travis, Otros sistemas de integración continua, Docker y contenedores, Uso de sistemas serverless, Programación de microservicios web, Uso de herramientas de construcción/gestores de tareas/gestores de dependencias",Docker Compose y otros sistemas de orquestación de contenedores,El mundo real