Marca temporal,Sugerencias,Conocimientos adquiridos
27/08/2017 13:26:43,,"git y github, Desarrollo basado en test, Uso de recursos en nube: Heroku u Openshift, Azure"
27/08/2017 13:34:35,,"git y github, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Javascript, Uso de recursos en nube: Heroku u Openshift, Azure, Herramientas de construcción: gulp, grunt, Makefile"
27/08/2017 14:46:15,,"git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Uso de recursos en nube: Heroku u Openshift, Azure, Ruby, Python o Perl, Herramientas de despliegue: flightplan o similares, Herramientas de construcción: gulp, grunt, Makefile"
28/08/2017 18:33:18,No usar git para las entregas ,"git y github, Desarrollo basado en test, Javascript, Uso de recursos en nube: Heroku u Openshift, Azure"
28/08/2017 18:34:00,"Las primeras semanas la asignatura podría ser un poco más guiada. Aunque lo que se aprende en la asignatura puede ser bastante diferente según el proyecto del alumno, me parece la mejor metodología para una asignatura de ese tipo en cuarto, donde se supone que ya sabemos hacer algo.","git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Javascript, Uso de recursos en nube: Heroku u Openshift, Azure, Herramientas de despliegue: flightplan o similares, Herramientas de construcción: gulp, grunt, Makefile"
28/08/2017 18:57:15,En lineas generales me ha parecido una asignatura interesante donde todo lo que se aprende es muy útil. En mi opinión el salto de la práctica 1 a la práctica 2 es demasiado grande por lo que mucha gente se puede quedar en esa práctica y luego es muy complicado reengancharse a la asignatura.,"git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Uso de recursos en nube: Heroku u Openshift, Azure, Ruby, Python o Perl, Herramientas de construcción: gulp, grunt, Makefile"
29/08/2017 9:52:36,Seria interesante abordar en algun apartado una breve introduccion a Kubernetes y/o arquitecturas basadas en microservicios.,"git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Uso de recursos en nube: Heroku u Openshift, Azure"
29/08/2017 9:54:10,,"git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Uso de recursos en nube: Heroku u Openshift, Azure"
29/08/2017 11:22:56,,"git y github, Desarrollo basado en test, Uso de recursos en nube: Heroku u Openshift, Azure"
29/08/2017 11:40:44,,"git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Uso de recursos en nube: Heroku u Openshift, Azure, Ruby, Python o Perl"
29/08/2017 12:04:42,"En la asignatura uno aprende a hacer tests pero no para que sirven ni el propósito (¿Se testea todo?, ¿Se testea lo que tiene bd?,¿Las funciones privadas no se testean?) ,  se aprende a usar lo que es docker y lxc pero igual uno no sale con la cabeza del todo clara de para que usarlo o si mejor usar una máquina virtual... Aún así esto no son más que pequeños matices  IV  es una pildora de conocimientos comprimidos bien distribuidos.","git y github, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Uso de recursos en nube: Heroku u Openshift, Azure, Herramientas de despliegue: flightplan o similares, Herramientas de construcción: gulp, grunt, Makefile"
30/08/2017 10:29:57,"Al principio de clase hacer un vídeo tutorial o seminario sobre cómo empezar con github(crear reporte,subidas, ramas,fork, etc) aunque sea algo por encima, en mi caso fue lo que más me costó al principio, por estúpido que me parezca ahora jajajaja","git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Javascript, Uso de recursos en nube: Heroku u Openshift, Azure, Herramientas de construcción: gulp, grunt, Makefile"
30/08/2017 18:01:59,,"git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Javascript, Uso de recursos en nube: Heroku u Openshift, Azure, Ruby, Python o Perl, Herramientas de despliegue: flightplan o similares, Herramientas de construcción: gulp, grunt, Makefile"
30/08/2017 18:07:45,Dejar el sistema de evaluación más claro desde el principio ,"git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestiónd e configuraciones, Uso de recursos en nube: Heroku u Openshift, Azure, Ruby, Python o Perl, Herramientas de construcción: gulp, grunt, Makefile"
30/08/2017 20:31:26,Fomentar la colaboración por el grupo de telegram y en la clase,"git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestión d e configuraciones, Uso de recursos en nube: Heroku u Openshift, Azure, Ruby, Python o Perl, Herramientas de despliegue: flightplan o similares, Herramientas de construcción: gulp, grunt, Makefile"
30/08/2017 20:52:25,"Profundizar en conceptos y paradigmas como restful,graphql,microservicios.Más NoSQL(mongodb,cassandra,redis,etc) Y adicionalmente entornos como Hadoop","git y github, Chef/ansible/docker u otras herramientas de gestión d e configuraciones, Javascript, Uso de recursos en nube: Heroku u Openshift, Azure, Herramientas de construcción: gulp, grunt, Makefile"
31/08/2017 17:59:40,,"git y github, Desarrollo basado en test, Chef/ansible/docker u otras herramientas de gestión d e configuraciones, Ruby, Python o Perl, Herramientas de despliegue: flightplan o similares"
12/09/2017 23:22:44,"El profesor debería tener mayor disponibilidad con los alumnos. La existencia de Telegram es muy cómoda pero hay ocasiones en las que la gente prefiere hablar cara a cara, y eso no se debería negar como ha ocurrido. Además, estoy de acuerdo en que la confianza con los alumnos es buena, pero sin olvidar que es una relación profesor-alumno, y que no se puede pretender que el profesor hable como un colega al alumno. Burlarse de las preguntas ridiculizándolas, y responder con la misma pregunta, haciendo ver que es una obviedad (además de frases ""graciosas"" como ""wait for it"", no es nada adecuado para un profesor, y muy desmotivante para un alumno.

Como punto positivo destaco la visión muy distinta al resto de profesores de la facultad y los conocimientos novedosos y prácticos. Además la forma de evaluación es diferente, aunque muchas veces los objetivos de cada práctica no eran demasiado claros.","git y github, Chef/ansible/docker u otras herramientas de gestión d e configuraciones, Uso de recursos en nube: Heroku u Openshift, Azure"