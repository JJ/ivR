%%
\documentclass[sigconf]{acmart}

%%
%% \BibTeX command to typeset BibTeX logo in the docs
\AtBeginDocument{%
  \providecommand\BibTeX{{%
    Bib\TeX}}}

%% Rights management information.  This information is sent to you
%% when you complete the rights form.  These commands have SAMPLE
%% values in them; it is your responsibility as an author to replace
%% the commands and values with those provided to you when you
%% complete the rights form.
\setcopyright{acmlicensed}
\copyrightyear{2024}
\acmYear{2024}
\acmDOI{XXXXXXX.XXXXXXX}

%% These commands are for a PROCEEDINGS abstract or paper.
\acmConference[ITICSE'24]{ITICSE'24}{June 03--05,  2018}{Milan, IT}
%%
%%  Uncomment \acmBooktitle if the title of the proceedings is different
%%  from ``Proceedings of ...''!
%%
%%\acmBooktitle{Woodstock '18: ACM Symposium on Neural Gaze Detection,
%%  June 03--05, 2018, Woodstock, NY}
\acmISBN{978-1-4503-XXXX-X/18/06}

\begin{document}

%%
%% The "title" command has an optional parameter,
%% allowing the author to define a "short title" to be used in page headers.
\title{Evaluative formation for agile teaching}

%%
%% The "author" command and its associated commands are used to define
%% the authors and their affiliations.
%% Of note is the shared affiliation of the first two authors, and the
%% "authornote" and "authornotemark" commands
%% used to denote shared contribution to the research.
\author{JJ Merelo-Guerv√≥s}
\email{jmerelo@ugr.es}
\orcid{0000-0002-1385-9741}
\affiliation{%
  \institution{Department of Computer Engineering, Automatics and Robotics and CITIC, University of Granada}
  \city{Granada}
  \country{Spain}
}


%%
%% By default, the full list of authors will be used in the page
%% headers. Often, this list is too long, and will overlap
%% other information printed in the page headers. This command allows
%% the author to define a more concise list
%% of authors' names for this purpose.
\renewcommand{\shortauthors}{JJ Merelo}

%%
%% The abstract is a short summary of the work to be presented in the
%% article.
\begin{abstract}

\end{abstract}

\begin{CCSXML}
<ccs2012>
   <concept>
       <concept_id>10011007.10011074.10011081.10011082.10011083</concept_id>
       <concept_desc>Software and its engineering~Agile software development</concept_desc>
       <concept_significance>500</concept_significance>
       </concept>
 </ccs2012>
\end{CCSXML}

\ccsdesc[500]{Software and its engineering~Agile software development}


%%
%% Keywords. The author(s) should pick words that accurately describe
%% the work being presented. Separate the keywords with commas.
\keywords{Software engineering, agile methodologies}

%\received{20 February 2007}
%\received[revised]{12 March 2009}
%\received[accepted]{5 June 2009}

%%
%% This command processes the author and affiliation and title
%% information and builds the first part of the formatted document.
\maketitle

\section{Introduction}

Teaching software engineering represents not only a challenge, but a series of challenges to the teacher, who needs the student to acquire a series of marketable skills at the same time that this acquisition is assessed in order to obtain a grade. At the same time, mainstream software development follows an {\em agile mindset}, following the Agile Manifesto \cite{agilemanifesto}, which is a customer-centered philosophy that maintains that any change in code should add value to the customer, either directly or indirectly. Teaching mindsets of philosophies is a notch more complicated than teaching skills; evaluating mindsets is even more complex. But that is what an industry with its ever growing {\em need for talent} is asking for.

One of the ways of teaching a mindset is having that same mindset while teaching; that is, if you want to teach agile, be agile while teaching \cite{chun2004agile,krehbiel2017agile}. One step into this mindset is simply to consider class experience a product for which students, collectively and individually, are the customers, and use industry-standard tools such as GitHub to produce class materials, create course-oriented milestones, as well as generate issues with the problems that need to be solved, content-wise or related to any software that you might have developed to support teaching.

You can, however, go a bit further and embrace agile in all stages of the teaching/learnign process. Several researchers have proposed manifestos in agile teaching, so the first step would be to understand those manifestos and adopt them where possible. In our case, the manifesto created by Krehbiel et al. \cite{krehbiel2017agile} seems the closest to what we have working with; this manifesto emphasizes adaptability to personal (and other) circumstances, teamwork, focusing on learning objectives and not on grades, autonomous learning by the student, practical working instead of theoretical teaching, and, over all, continuous improvement.

Manifestos are never enough either in development or teaching, and agile development encourages the adoption of best practices in every phase of development; but the last part of the manifesto which talks about continuous improvement, as well as the fact that we are talking about {\em best} practices, would need some way of measuring progress and how adopted practices affect the classroom. This is why we would like to add a new item to the manifesto: {\em learning analytics} \cite{clow2013overview} over anecdotal evidence or end-of-class failure/success rates.

Within this agile mindset, there are teaching methodologies that fit better; adopting these best practices is the first step towards agile teaching. We will focus on two of them that fit well with each other: project-based learning gives the student autonomy (which is one of the items in the manifesto) through the development of a project across one or several subjects \cite{krajcik2006project}; formative evaluation \cite{tessmer1994formative} also fits the autonomous learning part of the manifesto, but also focuses on learning objectives, since it pursues helping the student through continuous feedback on their submitted work (that advances the project mentioned above). This feedback helps continuous improvement of the project they are working with, which is other of the items in the manifesto.

In this paper we will describe the experience carried out in the last three school years in a 4th year (7th semester) subject in the Computer Science degree at the University of Granada, Spain; the subject deals with Cloud Computing, so the project needs to be working towards that final objective. But alongside the description of the experience, we will try to answer the following research questions:\begin{itemize}
\item {\bf RQ1:} Can you leverage metrics to improve individual and collective learning?
\item {\bf RQ2:} Are there early indicators or class success or failure?
\item {\bf RQ3:} Can we measure the effect of flipped learning through the gathered software analytics?
\end{itemize}

The rest of the paper is organized as follows: next we will present the state of the art in learning analytics applied to evaluative formation and flipped learning. The class setup, as well as the way data is collected will be presented next, in Section \ref{sec:setup}. The results of the analysis will be presented in Section \ref{sec:results} along with the answers to the research questions, and finally we will draw some conclusions in Section \ref{sec:conclusions}.

\section{State of the art}

Learning analytics (LA) \cite{clow2013overview} has been applied to all kind of learning processes and subjects; this includes problem-based learning combined with formative assessment (FA); \cite{aljohani2013learning} mentions that learning analytics and formative assessment work well together since they both provide immediate feedback on the quality of the learning process; however, it can be argued that LA is an essential part of FA, since a deep understanding of the objectives achieved by students is needed in order to provide student-specific feedback. In general, however, LA will refer to additional, macro-measurements at a class level or analytics that compare student performance with other students or with previous years \cite{zhang2023learning}. This last paper reveals an increasing interest in FA combined with LA, with computer science courses leading the way, but with other disciplines and subjects also using it to improve success rates.
However, there are no general rules on what specific analytics should be used. In general, it is important to consider a learning (and possibly learner) model in order to be able to correctly measure learning outcomes and how they are reached. For instance, \cite{stanja2023formative} focuses on {\em conceptions}, how the students understand (or not) certain specific and common ideas, thus their process is geared towards using common assessment tools to measure understanding of those conceptions.  Student attitude and disposition towards learning can be as interesting as a model; however it is impossible to measure without explicitly asking the student; that is why authors such as \cite{tempelaar2020learning} propose a framework that combines traces with surveys in order to predict outcomes such as early drop out.

What seems to be missing is, however, a single set of learning process measurements that can be used across any platform, subject, or way of deployment of formative assessment strategies. This is what we will try to propose and evaluate next, after exposing how our class has been set up in the next Section.

\section{Class set up and methodology}
\label{sec:setup}

As indicated previously, we follow problem-based learning; this implies that the students need to work on their own project for the duration; they will do so along 10 objectives, numbered from 0 to 9. Every student will work on their own repository; for every objective they will create a branch and a pull request from that branch to their main one; a pull request is a "request to merge" a set of changes; acceptance of that PR will imply merging into the main branch (and, in real world, usually deployment to production). This class setup matches the agile philosophy which matches interaction and working software over "comprehensive documentation" (which, in a class environment, would mainly be "theoretical" classes and memory-based exams). At the same time, PRs are the main interaction medium in software development: it allows members of the team to perform quality (and other, such as compliance) checks on the code that is going to be used; this matches the requirements of formative evaluation too. The professor (and other students who have also overcome that specific objective) will review that PR, request changes if it falls short of reaching the objective, and eventually accept it when it does.



\section{Results}
\label{sec:results}

\bibliographystyle{ACM-Reference-Format}
\bibliography{../rpg.bib,../dev.bib, ../agile.bib,../learning-analytics.bib,../pbl.bib}


\end{document}
\endinput
%%
%% End of file `sample-sigconf.tex'.
