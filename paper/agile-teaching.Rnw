%%
\documentclass[sigconf]{acmart}

%%
%% \BibTeX command to typeset BibTeX logo in the docs
\AtBeginDocument{%
  \providecommand\BibTeX{{%
    Bib\TeX}}}

%% Rights management information.  This information is sent to you
%% when you complete the rights form.  These commands have SAMPLE
%% values in them; it is your responsibility as an author to replace
%% the commands and values with those provided to you when you
%% complete the rights form.
\setcopyright{acmlicensed}
\copyrightyear{2024}
\acmYear{2024}
\acmDOI{XXXXXXX.XXXXXXX}

%% These commands are for a PROCEEDINGS abstract or paper.
\acmConference[ITICSE'24]{ITICSE'24}{June 03--05,  2018}{Milan, IT}
%%
%%  Uncomment \acmBooktitle if the title of the proceedings is different
%%  from ``Proceedings of ...''!
%%
%%\acmBooktitle{Woodstock '18: ACM Symposium on Neural Gaze Detection,
%%  June 03--05, 2018, Woodstock, NY}
\acmISBN{978-1-4503-XXXX-X/18/06}


%%
%% Submission ID.
%% Use this when submitting an article to a sponsored event. You'll
%% receive a unique submission ID from the organizers
%% of the event, and this ID should be used as the parameter to this command.
%%\acmSubmissionID{123-A56-BU3}

%%
%% For managing citations, it is recommended to use bibliography
%% files in BibTeX format.
%%
%% You can then either use BibTeX with the ACM-Reference-Format style,
%% or BibLaTeX with the acmnumeric or acmauthoryear sytles, that include
%% support for advanced citation of software artefact from the
%% biblatex-software package, also separately available on CTAN.
%%
%% Look at the sample-*-biblatex.tex files for templates showcasing
%% the biblatex styles.
%%

%%
%% The majority of ACM publications use numbered citations and
%% references.  The command \citestyle{authoryear} switches to the
%% "author year" style.
%%
%% If you are preparing content for an event
%% sponsored by ACM SIGGRAPH, you must use the "author year" style of
%% citations and references.
%% Uncommenting
%% the next command will enable that style.
%%\citestyle{acmauthoryear}


%%
%% end of the preamble, start of the body of the document source.
\begin{document}

%%
%% The "title" command has an optional parameter,
%% allowing the author to define a "short title" to be used in page headers.
\title{Evaluative formation for agile teaching}

%%
%% The "author" command and its associated commands are used to define
%% the authors and their affiliations.
%% Of note is the shared affiliation of the first two authors, and the
%% "authornote" and "authornotemark" commands
%% used to denote shared contribution to the research.
\author{JJ Merelo-Guerv√≥s}
\email{jmerelo@ugr.es}
\orcid{0000-0002-1385-9741}
\affiliation{%
  \institution{Department of Computer Engineering, Automatics and Robotics and CITIC, University of Granada}
  \city{Granada}
  \country{Spain}
}


%%
%% By default, the full list of authors will be used in the page
%% headers. Often, this list is too long, and will overlap
%% other information printed in the page headers. This command allows
%% the author to define a more concise list
%% of authors' names for this purpose.
\renewcommand{\shortauthors}{JJ Merelo}

%%
%% The abstract is a short summary of the work to be presented in the
%% article.
\begin{abstract}

\end{abstract}

\begin{CCSXML}
<ccs2012>
   <concept>
       <concept_id>10011007.10011074.10011081.10011082.10011083</concept_id>
       <concept_desc>Software and its engineering~Agile software development</concept_desc>
       <concept_significance>500</concept_significance>
       </concept>
 </ccs2012>
\end{CCSXML}

\ccsdesc[500]{Software and its engineering~Agile software development}


%%
%% Keywords. The author(s) should pick words that accurately describe
%% the work being presented. Separate the keywords with commas.
\keywords{Software engineering, agile methodologies}

%\received{20 February 2007}
%\received[revised]{12 March 2009}
%\received[accepted]{5 June 2009}

%%
%% This command processes the author and affiliation and title
%% information and builds the first part of the formatted document.
\maketitle

\section{Introduction}

Teaching software engineering represents not only a challenge, but a series of challenges to the teacher, who needs the student to acquire a series of marketable skills at the same time that development is assessed in order to obtain a grade. At the same time, mainstream software development follows an {\em agile mindset}, following the Agile Manifesto \cite{agilemanifesto}, which is a customer-centered philosophy that maintains that any change in code should add value to the customer, either directly or indirectly. Teaching mindsets of philosophies is a notch more complicated than teaching skills; evaluating mindsets is even more complex. But that is what an industry with its ever growing {\em need for talent} is asking for.

One of the ways of teaching a mindset is having that same mindset while teaching; that is, if you want to teach agile, be agile while teaching \cite{chun2004agile,krehbiel2017agile}.

We will try to answer the following research questions:\begin{itemize}
\item {\bf RQ1:} Can we measure the effect of agile methodologies on the learning outcomes?
\item {\bf RQ2:} Are there early indicators or class success or failure?
\item {\bf RQ3:} Can we measure the effect of flipped learning on the learning outcomes?
\end{itemize}


The rest of the paper is organized as follows: next we will present the state of the art in learning analytics applied to evaluative formation and flipped learning. The class setup, as well as the way data is collected will be presented next, in Section \ref{sec:setup}. The results of the analysis will be presented in Section \ref{sec:results}, and finally we will draw some conclusions in Section \ref{sec:conclusions}.

\bibliographystyle{ACM-Reference-Format}
\bibliography{../rpg.bib,../dev.bib}


\end{document}
\endinput
%%
%% End of file `sample-sigconf.tex'.
